<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
              xmlns:fontawesome="clr-namespace:DonorTraceMobile.Utils;assembly=DonorTraceMobile"
             xmlns:behaviors="clr-namespace:DonorTraceMobile.Behaviors"
             xmlns:implementations="clr-namespace:DonorTraceMobile.Validators.Implementations"
             x:Class="DonorTraceMobile.Pages.AddCampaign">
    <ContentPage.ToolbarItems>

        <ToolbarItem Text="Add Campaign" Order="Primary"></ToolbarItem>
    </ContentPage.ToolbarItems>
    <ContentPage.Content>
        <AbsoluteLayout>
            <Grid AbsoluteLayout.LayoutFlags="All" AbsoluteLayout.LayoutBounds="0,0,1,1">
                <Grid.RowDefinitions>
                </Grid.RowDefinitions>
                <StackLayout Margin="0,40,0,0" HorizontalOptions="Center">

                    <!--<Image HeightRequest="100" WidthRequest="100" Source="headertransplant.png"></Image>
                    <Label Text="Welcome to Donor Trace" Margin="5,5,0,0" FontSize="Medium" TextColor="#45AC2B"></Label>-->

                    <StackLayout Margin="15,15,0,0" HorizontalOptions="Center">
                        <Label Text="{x:Static fontawesome:FontAwesomeIcons.CalendarAlt}"
                               FontFamily="{StaticResource FontAwesomeSolid}" FontSize="70" TextColor="#45AC2B" />
                    </StackLayout>
                </StackLayout>

                <StackLayout Margin="40,25,40,0" VerticalOptions="CenterAndExpand">
                    <StackLayout.Behaviors>
                        <behaviors:ValidationGroupBehavior x:Name="form"/>
                    </StackLayout.Behaviors>
                    <Entry Placeholder="Organization" PlaceholderColor="#707070" x:Name="EntName">
                        <Entry.Behaviors>
                            <behaviors:ValidationBehavior Group="{x:Reference form}" 
                                              PropertyName="Text">
                                <behaviors:ValidationBehavior.Validators>
                                    <implementations:RequiredValidator Message="required" />
                                    <!--<Validators:FormatValidator Format="^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$" Message="Invalid email"></Validators:FormatValidator>-->
                                </behaviors:ValidationBehavior.Validators>
                            </behaviors:ValidationBehavior>
                        </Entry.Behaviors>
                    </Entry>

                    <Editor Placeholder="Description" PlaceholderColor="#707070" x:Name="EntDesc" AutoSize="TextChanges" MaxLength="50">
                        <Editor.Behaviors>
                            <behaviors:ValidationBehavior Group="{x:Reference form}" 
                                              PropertyName="Text">
                                <behaviors:ValidationBehavior.Validators>
                                    <implementations:RequiredValidator Message="Description is required" />
                                </behaviors:ValidationBehavior.Validators>
                            </behaviors:ValidationBehavior>
                        </Editor.Behaviors>
                    </Editor>

                    <Editor Placeholder="Location" PlaceholderColor="#707070" x:Name="EntLocation" AutoSize="TextChanges" MaxLength="50">
                        <Editor.Behaviors>
                            <behaviors:ValidationBehavior Group="{x:Reference form}" 
                                                          PropertyName="Text">
                                <behaviors:ValidationBehavior.Validators>
                                    <implementations:RequiredValidator Message="Location is required" />
                                </behaviors:ValidationBehavior.Validators>
                            </behaviors:ValidationBehavior>
                        </Editor.Behaviors>
                    </Editor>
                    <StackLayout>
                        <Label Text="Date:" />
                        <DatePicker x:Name="EntDate" Format="D">
                        <!--<DatePicker.Behaviors>
                            <behaviors:ValidationBehavior Group="{x:Reference form}" 
                                                          PropertyName="Value">
                                <behaviors:ValidationBehavior.Validators>
                                    <implementations:RequiredValidator Message="Date is required" />
                                </behaviors:ValidationBehavior.Validators>
                            </behaviors:ValidationBehavior>
                        </DatePicker.Behaviors>-->
                    </DatePicker></StackLayout>
                    <StackLayout>
                        <Label Text="Time:" />
                        <TimePicker x:Name="EntTime">
                            <!--<TimePicker.Behaviors>
                                <behaviors:ValidationBehavior Group="{x:Reference form}" 
                                                          PropertyName="">
                                    <behaviors:ValidationBehavior.Validators>
                                        <implementations:RequiredValidator Message="Time is required" />
                                    </behaviors:ValidationBehavior.Validators>
                                </behaviors:ValidationBehavior>
                            </TimePicker.Behaviors>-->
                        </TimePicker>
                    </StackLayout>



                    <Button Text="Save" CornerRadius="30" Margin="0,10,0,0"
                        HeightRequest="40" x:Name="BtnSave" BackgroundColor="#45AC2B" TextColor="White" Clicked="BtnSave_Clicked"  IsEnabled="{Binding Source={x:Reference form}, Path=IsValid}"></Button>
                </StackLayout>
                <ContentView IsVisible="False" x:Name="Overlay" AbsoluteLayout.LayoutBounds="0,0,1,1" Opacity="0.8" BackgroundColor="White" 
                         HeightRequest="50" WidthRequest="50" AbsoluteLayout.LayoutFlags="All" Padding="10, 0">

                    <ActivityIndicator x:Name="Act" Opacity="1" 
                                   VerticalOptions="Center" HorizontalOptions="Center"
                                   
                                   Color="#45AC2B" IsRunning="True">

                    </ActivityIndicator>
                </ContentView>
            </Grid>
        </AbsoluteLayout>
    </ContentPage.Content>
</ContentPage>